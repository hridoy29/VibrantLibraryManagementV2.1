@page "/"
@inject NavigationManager _navigate
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ISessionService _sessionService
@inject TokenService _tokenService
@inject ILoginService LoginService;
@inject CustomAuthenticationStateProvider customAuthenticationStateProvider

<PageTitle>VibrantLibraryManagement</PageTitle>

<h1>Loading...</h1>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            var isRememberMeOn = await _sessionService.Get<bool>("VibrantRememberMe");
            var token = await _sessionService.Get<string>("authToken");
            if (!string.IsNullOrWhiteSpace(token))
            {
                var isValid = _tokenService.IsTokenExpired(token);
                var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
                if (authState.User.Identity.IsAuthenticated)
                {
                    _navigate.NavigateTo("/dashboard");
                }
                else
                {
                    if (isRememberMeOn && isValid)
                    {
                        await PerformLogin();
                    }
                    else
                    {
                        await GoToLogin();
                    }
                }
            }
            else
            {
                await GoToLogin();
            }

        }
    }
    public async Task StoreToken(LoginResponse authResponse)
    {
        await customAuthenticationStateProvider.SetAuthenticationStateAsync(authResponse.AccessToken);

    }

    public async Task GoToLogin()
    {
        await _sessionService.Remove("authToken");
        _navigate.NavigateTo("/login");

    }

    public async Task PerformLogin()
    {
        var obj = await _sessionService.Get<LoginEntity>("UserDetails");
        if (obj is not null)
        {
            var res = await LoginService.Login(obj);
            await StoreToken(res);
            _navigate.NavigateTo("/dashboard");
        }
        else
        {
            await GoToLogin();
        }
    }
}
