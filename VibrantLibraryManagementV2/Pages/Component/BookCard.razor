@inject IJSRuntime JSRuntime
@inject IImagesServices ImagesServices

<div class="bookcard">
    @if (ImageUrlFromAPI != null)
    {
        <img class="book-image" src="@ImageUrlFromAPI">
    }
    else
    {
        <div class="custom-book-image-container">
            @((BookName.Length > 100) ? BookName.Substring(0, 100) + ".." : BookName)
        </div>
    }
    
    <div class="detail-container-ms">
        <p class="interest-alert-book-name-first" title="@BookName">
            @((BookName.Length > 50) ? BookName.Substring(0, 44) + ".." : BookName)
        </p>
        <p class="autor-interest-alert">@Author</p>
        <div class="ratings-container">
            <SfRating Value="@Ratings" ReadOnly></SfRating>
            <span>&nbsp; @Ratings</span>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string BookName { get; set; }
    [Parameter]
    public string ImageUrl { get; set; }
    [Parameter]
    public string Author { get; set; }
    [Parameter]
    public double Ratings { get; set; }
    string token = "";
    private string ImageUrlFromAPI { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(ImageUrl))
        {
            token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");
            var result  = await ImagesServices.GetImageUrl(ImageUrl, token);
            ImageUrlFromAPI = result.FileUrl;
        }
        else
        {
            ImageUrlFromAPI = null;
        }
    }
}

<style>
    .e-rating-container .e-rating-item-container {
        cursor: pointer;
        font-size: 13px;
        padding: 4px;
        display: block;
        min-width: calc(1em + 8px);
        min-height: calc(1em + 8px);
        position: relative;
    }

    .e-rating-container .e-rating-item-list {
        display: -ms-inline-flexbox;
        display: inline-flex;
        padding: 0;
        margin: 0;
    }

    .bookcard {
        /* width: 130px;
                height: 190px; */
        width: 184px !important;
        height: 271px !important;
        flex-shrink: 0;
    }

    .book-image {
        width: 180px;
        height: 280px;
        object-fit: cover;
        border-radius: 10px;
    }

    .interest-alert-book-name-first {
        font-size: 14px;
        margin-bottom: 0px;
        font-weight: bold;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: normal;
    }

    .autor-interest-alert {
        margin: 0px;
        padding-bottom: 5px;
        font-size: 12px;
    }

    .ratings-container {
        display: flex;
        align-items: center;
        font-size: 12px;
    }

    .ratings img {
        width: 12px;
    }

    .custom-book-image-container{
        width: 180px;
        height: 280px;
        background: gray;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        text-align:center;
        padding: 10px 20px;
    }

</style>